{"version":3,"file":"js/checked-45fdb5de42078e07523a.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/checked.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/checked.js\");\n","function check() {\n  // 投稿のDOMを取得している\n  const posts = document.getElementsByClassName(\"post\");\n \n  // 取得したDOMを配列に変換している\n  postsA = Array.from(posts);\n \n  postsA.forEach(function (post) {\n      if (post.getAttribute(\"data-load\") != null) {\n       return null;\n     }\n     post.setAttribute(\"data-load\", \"true\");\n    // 投稿をクリックした場合に実行する処理を定義している\n    post.addEventListener(\"click\", (e) => {\n      // どの投稿をクリックしたのか、カスタムデータを利用して取得している\n      const postId = post.getAttribute(\"data-id\");\n \n      // Ajaxに必要なオブジェクトを生成している\n      const XHR = new XMLHttpRequest();\n \n      // openでリクエストを初期化する\n      XHR.open(\"GET\", `/posts/${postId}`, true);\n \n      // レスポンスのタイプを指定する\n      XHR.responseType = \"json\";\n \n      // sendでリクエストを送信する\n      XHR.send();\n \n      // レスポンスを受け取った時の処理を記述する\n      XHR.onload = () => {\n        const item = XHR.response.post;\n        if (item.checked === true) {\n          // 既読状態であれば、灰色に変わるcssを適用するためのカスタムデータを追加している\n          post.setAttribute(\"data-check\", \"true\");\n        } else if (item.checked === false) {\n          // 未読状態であれば、カスタムデータを削除している\n          post.removeAttribute(\"data-check\");\n        }\n \n        if (XHR.status != 200) {\n          // レスポンスの HTTP ステータスを解析し、該当するエラーメッセージをアラートで表示するようにしている\n          alert(`Error ${XHR.status}: ${XHR.statusText}`); // e.g. 404: Not Found\n        } else {\n          return null;\n        }\n      };\n      // リクエストが送信できなかった時\n      XHR.onerror = () => {\n        alert(\"Request failed\");\n      };\n \n      // イベントをキャンセルして、処理が重複しないようにしている\n      e.preventDefault();\n    });\n  });\n }\n \nsetInterval(check, 1000);\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}